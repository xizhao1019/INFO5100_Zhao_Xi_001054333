/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface;

import Business.Car;
import Business.CarList;
import Business.ExcelRead;
import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.Collections;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author zhaoxi
 */
public class SearchJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SearchPanel
     */
    
    private JPanel UserProcessJPanel;
    private CarList carList;
    private Car car;
    private ExcelRead excel;
    
    public SearchJPanel(JPanel UserProcessJPanel,CarList carList,ExcelRead excel) {
        initComponents();
        this.UserProcessJPanel = UserProcessJPanel;
        this.carList = carList;
        this.excel = excel;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        SearchTable = new javax.swing.JTable();
        platetxt = new javax.swing.JTextField();
        modeltxt = new javax.swing.JTextField();
        btnSeat5 = new javax.swing.JRadioButton();
        btnSeat7 = new javax.swing.JRadioButton();
        btnSeat9 = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        brandtxt = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        locationtxt = new javax.swing.JTextField();
        manufacturetxt = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        serialtxt = new javax.swing.JTextField();
        catalogtxt = new javax.swing.JTextField();
        maintenanceComboBox = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        btnSearchbrand = new javax.swing.JButton();
        btnSearchmodel = new javax.swing.JButton();
        btnSearchplate = new javax.swing.JButton();
        btnSearchseats = new javax.swing.JButton();
        btnSearchavaliable = new javax.swing.JButton();
        btnSearchlocation = new javax.swing.JButton();
        btnSearchserial = new javax.swing.JButton();
        btnSearchmanufature = new javax.swing.JButton();
        btnSearchcertification = new javax.swing.JButton();
        btnSearchcatalog = new javax.swing.JButton();
        btndetail = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        avaliableComboBox = new javax.swing.JComboBox<>();

        btnBack.setText("<  Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        SearchTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Brand", "Model", "Plate Number", "Seats", "Avaliable Time", "Location"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        SearchTable.setAlignmentX(0.0F);
        SearchTable.setAlignmentY(0.0F);
        jScrollPane1.setViewportView(SearchTable);
        if (SearchTable.getColumnModel().getColumnCount() > 0) {
            SearchTable.getColumnModel().getColumn(0).setResizable(false);
            SearchTable.getColumnModel().getColumn(0).setPreferredWidth(10);
            SearchTable.getColumnModel().getColumn(1).setResizable(false);
            SearchTable.getColumnModel().getColumn(1).setPreferredWidth(10);
            SearchTable.getColumnModel().getColumn(2).setResizable(false);
            SearchTable.getColumnModel().getColumn(2).setPreferredWidth(20);
            SearchTable.getColumnModel().getColumn(3).setResizable(false);
            SearchTable.getColumnModel().getColumn(3).setPreferredWidth(10);
            SearchTable.getColumnModel().getColumn(4).setResizable(false);
            SearchTable.getColumnModel().getColumn(4).setPreferredWidth(30);
            SearchTable.getColumnModel().getColumn(5).setResizable(false);
            SearchTable.getColumnModel().getColumn(5).setPreferredWidth(20);
        }

        btnSeat5.setText("5");

        btnSeat7.setText("7");

        btnSeat9.setText("9");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Brand");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Model");

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Plate Number");

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Number of Seats");

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Avaliable Time");

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("Maintenance Certification");

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("Fleet Catalog Updated Time");

        maintenanceComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Valid", "Expired" }));

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Location");

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Serial Number");

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Manufacture Year");

        btnSearchbrand.setText("Search");
        btnSearchbrand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchbrandActionPerformed(evt);
            }
        });

        btnSearchmodel.setText("Search");
        btnSearchmodel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchmodelActionPerformed(evt);
            }
        });

        btnSearchplate.setText("Search");
        btnSearchplate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchplateActionPerformed(evt);
            }
        });

        btnSearchseats.setText("Search");
        btnSearchseats.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchseatsActionPerformed(evt);
            }
        });

        btnSearchavaliable.setText("Search");
        btnSearchavaliable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchavaliableActionPerformed(evt);
            }
        });

        btnSearchlocation.setText("Search");
        btnSearchlocation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchlocationActionPerformed(evt);
            }
        });

        btnSearchserial.setText("Search");
        btnSearchserial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchserialActionPerformed(evt);
            }
        });

        btnSearchmanufature.setText("Search");
        btnSearchmanufature.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchmanufatureActionPerformed(evt);
            }
        });

        btnSearchcertification.setText("Search");
        btnSearchcertification.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchcertificationActionPerformed(evt);
            }
        });

        btnSearchcatalog.setText("Search");
        btnSearchcatalog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchcatalogActionPerformed(evt);
            }
        });

        btndetail.setText("View Details");
        btndetail.setMaximumSize(new java.awt.Dimension(110, 30));
        btndetail.setMinimumSize(new java.awt.Dimension(110, 30));
        btndetail.setPreferredSize(new java.awt.Dimension(110, 30));
        btndetail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndetailActionPerformed(evt);
            }
        });

        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        avaliableComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Earlist to latest", "Latest to earlist" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(61, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(platetxt, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(modeltxt, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(brandtxt, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnSeat5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSeat7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnSeat9))
                            .addComponent(avaliableComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSearchbrand)
                            .addComponent(btnSearchplate)
                            .addComponent(btnSearchmodel)
                            .addComponent(btnSearchseats)
                            .addComponent(btnSearchavaliable))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(manufacturetxt, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(serialtxt, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(locationtxt, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(maintenanceComboBox, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(catalogtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSearchmanufature, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnSearchserial, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnSearchcertification, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnSearchcatalog, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnSearchlocation, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 783, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btndetail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnReset)))))
                .addContainerGap(61, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(btnBack)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(locationtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7)
                        .addComponent(btnSearchlocation))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(brandtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2)
                                .addComponent(btnSearchbrand))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(modeltxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel3)
                                .addComponent(btnSearchmodel))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(platetxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel4)
                                .addComponent(btnSearchplate))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnSeat5)
                                .addComponent(btnSeat7)
                                .addComponent(btnSeat9)
                                .addComponent(btnSearchseats)
                                .addComponent(jLabel5))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel6)
                                .addComponent(btnSearchavaliable)
                                .addComponent(avaliableComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel8)
                                .addComponent(serialtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnSearchserial))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel9)
                                .addComponent(manufacturetxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnSearchmanufature))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel10)
                                .addComponent(maintenanceComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnSearchcertification))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel11)
                                .addComponent(catalogtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnSearchcatalog)))))
                .addGap(35, 35, 35)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btndetail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnReset))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        UserProcessJPanel.remove(this);
        CardLayout layout = (CardLayout) UserProcessJPanel.getLayout();
        layout.next(UserProcessJPanel);
    }//GEN-LAST:event_btnBackActionPerformed

    private void populateTabel(ArrayList<Car> resultList) throws Exception {
        
        DefaultTableModel dtm = (DefaultTableModel)SearchTable.getModel();
        dtm.setRowCount(0);
       
        for (var car: resultList) {
            Object[] row = new Object[6];
            row[0] = car;
            row[1] = car.getModel();
            row[2] = car.getPlatenumber();
            row[3] = car.getSeat();
            row[4] = car.getAvaliableTime();
            row[5] = car.getLocation();
            dtm.addRow(row);
        }
    }
    
    private void btnSearchbrandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchbrandActionPerformed
        Car result = null;
        try {
            result = excel.loadCarList().searchBrand(brandtxt.getText());
            if(result == null){
            JOptionPane.showMessageDialog(null, "This car does not exist", "Warning", JOptionPane.INFORMATION_MESSAGE);
        }
        else{
            ArrayList<Car> carList = excel.loadCarList().getCarList();
            int len = carList.size();
            ArrayList<Car> resultList = new ArrayList<Car>();
                for (int i = 0; i < len; i++) {
                    if (brandtxt.getText().equals(carList.get(i).getBrand())) {
                       resultList.add(carList.get(i));
                    }
                }
                populateTabel(resultList);
            } 
        } catch (Exception ex) {
                Logger.getLogger(SearchJPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_btnSearchbrandActionPerformed

    private void btnSearchmodelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchmodelActionPerformed
        Car result = null;
        try {
            result = excel.loadCarList().searchModel(modeltxt.getText());
            if(result == null){
            JOptionPane.showMessageDialog(null, "This car does not exist", "Warning", JOptionPane.INFORMATION_MESSAGE);
        }
        else{
            ArrayList<Car> carList = excel.loadCarList().getCarList();
            int len = carList.size();
            ArrayList<Car> resultList = new ArrayList<Car>();
                for (int i = 0; i < len; i++) {
                    if (modeltxt.getText().equals(carList.get(i).getModel())) {
                       resultList.add(carList.get(i));
                    }
                }
                populateTabel(resultList);
            } 
        } catch (Exception ex) {
                Logger.getLogger(SearchJPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_btnSearchmodelActionPerformed

    private void btnSearchplateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchplateActionPerformed
       Car result = null;
        try {
            result = excel.loadCarList().searchPlate(platetxt.getText());
            if(result == null){
            JOptionPane.showMessageDialog(null, "This car does not exist", "Warning", JOptionPane.INFORMATION_MESSAGE);
        }
        else{
            ArrayList<Car> carList = excel.loadCarList().getCarList();
            int len = carList.size();
            ArrayList<Car> resultList = new ArrayList<Car>();
                for (int i = 0; i < len; i++) {
                    if (platetxt.getText().equals(carList.get(i).getPlatenumber())) {
                       resultList.add(carList.get(i));
                    }
                }
                populateTabel(resultList);
            } 
        } catch (Exception ex) {
                Logger.getLogger(SearchJPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_btnSearchplateActionPerformed

    private boolean searchSeat(){
        boolean searchSeat = false;
         
        if (btnSeat5.isSelected() || btnSeat7.isSelected() || btnSeat9.isSelected()) {
            searchSeat = true;
            }
        
        return searchSeat;
    }
    
    private void btnSearchseatsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchseatsActionPerformed
       
        try {
            if(!searchSeat()){
            JOptionPane.showMessageDialog(null, "This car does not exist", "Warning", JOptionPane.INFORMATION_MESSAGE);
        }
        else{
            ArrayList<Car> carList = excel.loadCarList().getCarList();
            int len = carList.size();
            ArrayList<Car> resultList = new ArrayList<Car>();
            
            for (int i = 0; i < len; i++) {
                if (btnSeat5.isSelected()) {
                    if (carList.get(i).getSeat() == 5) {
                       resultList.add(carList.get(i));
                    }
                } 
                if (btnSeat7.isSelected()) {
                    if (carList.get(i).getSeat() == 7) {
                       resultList.add(carList.get(i));
                    } 
                }
                if (btnSeat9.isSelected()) {
                    if (carList.get(i).getSeat() == 9) {
                       resultList.add(carList.get(i));
                    } 
                }
            }
                populateTabel(resultList);
            } 
        } catch (Exception ex) {
                Logger.getLogger(SearchJPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_btnSearchseatsActionPerformed

    private void btnSearchavaliableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchavaliableActionPerformed
        try {
        CarList carlist = excel.loadCarList();
            ArrayList<String> avaliableTime = new ArrayList<>();
            ArrayList<Car> earlyToLate = new ArrayList<>();
            ArrayList<Car> lateToEarly = new ArrayList<>();
        
        for (int i = 0; i < carlist.getCarList().size(); i++) {
            avaliableTime.add(carlist.getCarList().get(i).getAvaliableTime());
            }
        
            Collections.sort(avaliableTime);
            for (int i = 0; i < carlist.getCarList().size(); i++) {
                Car c = carlist.searchAvaliableTime(avaliableTime.get(i));
                earlyToLate.add(c);
            }
            
            Collections.reverse(avaliableTime);
            for (int i = 0; i < carlist.getCarList().size(); i++) {
                Car c = carlist.searchAvaliableTime(avaliableTime.get(i));
                lateToEarly.add(c);
            }
            
            
        if (avaliableComboBox.getSelectedItem().equals("Earlist to latest")) {
             populateTabel(earlyToLate);
        }
        
        if (avaliableComboBox.getSelectedItem().equals("Latest to earlist")) {
             populateTabel(lateToEarly);
        }
        
        } catch (Exception ex) {
            Logger.getLogger(SearchJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btnSearchavaliableActionPerformed

    private void btnSearchlocationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchlocationActionPerformed
        Car result = null;
        try {
            result = excel.loadCarList().searchLocation(locationtxt.getText());
            if(result == null){
            JOptionPane.showMessageDialog(null, "This car does not exist", "Warning", JOptionPane.INFORMATION_MESSAGE);
        }
        else{
            ArrayList<Car> carList = excel.loadCarList().getCarList();
            int len = carList.size();
            ArrayList<Car> resultList = new ArrayList<Car>();
                for (int i = 0; i < len; i++) {
                    if (locationtxt.getText().equals(carList.get(i).getLocation())) {
                       resultList.add(carList.get(i));
                    }
                }
                populateTabel(resultList);
            } 
        } catch (Exception ex) {
                Logger.getLogger(SearchJPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_btnSearchlocationActionPerformed

    private void btnSearchserialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchserialActionPerformed
        Car result = null;
        try {
            result = excel.loadCarList().searchSerialNumber(serialtxt.getText());
            if(result == null){
            JOptionPane.showMessageDialog(null, "This car does not exist", "Warning", JOptionPane.INFORMATION_MESSAGE);
        }
        else{
            ArrayList<Car> carList = excel.loadCarList().getCarList();
            int len = carList.size();
            ArrayList<Car> resultList = new ArrayList<Car>();
                for (int i = 0; i < len; i++) {
                    if (serialtxt.getText().equals(carList.get(i).getSerialnumber())) {
                       resultList.add(carList.get(i));
                    }
                }
                populateTabel(resultList);
            } 
        } catch (Exception ex) {
                Logger.getLogger(SearchJPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_btnSearchserialActionPerformed

    private void btnSearchmanufatureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchmanufatureActionPerformed
        Car result = null;
        try {
            result = excel.loadCarList().searchYear(Integer.valueOf(manufacturetxt.getText()));
            if(result == null){
            JOptionPane.showMessageDialog(null, "This car does not exist", "Warning", JOptionPane.INFORMATION_MESSAGE);
        }
        else{
            ArrayList<Car> carList = excel.loadCarList().getCarList();
            int len = carList.size();
            ArrayList<Car> resultList = new ArrayList<Car>();
                for (int i = 0; i < len; i++) {
                    if (Integer.valueOf(manufacturetxt.getText())==(carList.get(i).getManufactureYear())) {
                       resultList.add(carList.get(i));
                    }
                }
                populateTabel(resultList);
            } 
        } catch (Exception ex) {
                Logger.getLogger(SearchJPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_btnSearchmanufatureActionPerformed

    private void btnSearchcertificationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchcertificationActionPerformed
       try {
            if(!searchSeat()){
            ArrayList<Car> carList = excel.loadCarList().getCarList();
            int len = carList.size();
            
            ArrayList<Car> resultList = new ArrayList<Car>();
            for (int i = 0; i < len; i++) {
                if (maintenanceComboBox.getSelectedItem().equals("Valid")) {
                    if (carList.get(i).getMaintenanceCertification().equals("Valid")) {
                       resultList.add(carList.get(i));
                    }
                } 
                if (maintenanceComboBox.getSelectedItem().equals("Expired")) {
                    if (carList.get(i).getMaintenanceCertification().equals("Expired")) {
                       resultList.add(carList.get(i));
                    }
                } 
            }
                populateTabel(resultList);
            } 
        } catch (Exception ex) {
                Logger.getLogger(SearchJPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_btnSearchcertificationActionPerformed

    private void btnSearchcatalogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchcatalogActionPerformed
        Car result = null;
        try {
            result = excel.loadCarList().searchCatalogTime(catalogtxt.getText());
            if(result == null){
            JOptionPane.showMessageDialog(null, "This car does not exist", "Warning", JOptionPane.INFORMATION_MESSAGE);
        }
        else{
            ArrayList<Car> carList = excel.loadCarList().getCarList();
            int len = carList.size();
            ArrayList<Car> resultList = new ArrayList<Car>();
                for (int i = 0; i < len; i++) {
                    if (catalogtxt.getText().equals(carList.get(i).getFleetcatalog())) {
                       resultList.add(carList.get(i));
                    }
                }
                populateTabel(resultList);
            } 
        } catch (Exception ex) {
                Logger.getLogger(SearchJPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_btnSearchcatalogActionPerformed

    private void btndetailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndetailActionPerformed
        
        int selectedRow = SearchTable.getSelectedRow();
        if (selectedRow>=0) {
            Car car = (Car)SearchTable.getValueAt(selectedRow, 0);
            ViewDetailJPanel panel = new ViewDetailJPanel(UserProcessJPanel,car);
            UserProcessJPanel.setLayout(new CardLayout());
            UserProcessJPanel.add("ViewDetailJPanel", panel);
            CardLayout layout = (CardLayout) (UserProcessJPanel.getLayout());
            layout.next(UserProcessJPanel);
            }
        else{
             JOptionPane.showMessageDialog(null, "Please select any row", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btndetailActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
            brandtxt.setText("");
            modeltxt.setText("");
            platetxt.setText("");
            btnSeat5.setSelected(false);
            btnSeat7.setSelected(false);
            btnSeat9.setSelected(false);
            serialtxt.setText("");
            locationtxt.setText("");
            catalogtxt.setText("");
    }//GEN-LAST:event_btnResetActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable SearchTable;
    private javax.swing.JComboBox<String> avaliableComboBox;
    private javax.swing.JTextField brandtxt;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSearchavaliable;
    private javax.swing.JButton btnSearchbrand;
    private javax.swing.JButton btnSearchcatalog;
    private javax.swing.JButton btnSearchcertification;
    private javax.swing.JButton btnSearchlocation;
    private javax.swing.JButton btnSearchmanufature;
    private javax.swing.JButton btnSearchmodel;
    private javax.swing.JButton btnSearchplate;
    private javax.swing.JButton btnSearchseats;
    private javax.swing.JButton btnSearchserial;
    private javax.swing.JRadioButton btnSeat5;
    private javax.swing.JRadioButton btnSeat7;
    private javax.swing.JRadioButton btnSeat9;
    private javax.swing.JButton btndetail;
    private javax.swing.JTextField catalogtxt;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField locationtxt;
    private javax.swing.JComboBox<String> maintenanceComboBox;
    private javax.swing.JTextField manufacturetxt;
    private javax.swing.JTextField modeltxt;
    private javax.swing.JTextField platetxt;
    private javax.swing.JTextField serialtxt;
    // End of variables declaration//GEN-END:variables
}
