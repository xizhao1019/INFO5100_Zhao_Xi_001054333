/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.SystemAdminWorkArea;

import Business.Area.Area;
import Business.CityRestaurant.CityRestaurant;
import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Role.RestaurantAdminRole;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author zhaoxi
 */
public class ManageRestaurantAdminJPanel extends javax.swing.JPanel {
    
    private JPanel userProcessContainer;
    private EcoSystem system;
    /**
     * Creates new form SystemAdminManageRestaurantJPanel
     */
    public ManageRestaurantAdminJPanel(JPanel userProcessContainer, EcoSystem system) {
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        initComponents();
        populateAreaCityComboBox();
        populateTable();
    }
    
    private void populateAreaCityComboBox(){
        areaComboBox.removeAllItems();
        cityNameComboBox.removeAllItems();
        
        for (Area area : system.getAreaList()){
            areaComboBox.addItem(area);
        }
        
        for (CityRestaurant.CityName cityname : CityRestaurant.CityName.values()) {
            cityNameComboBox.addItem(cityname);
        }
    }
    
   
    private void populateRestaurantComboBox(Area area){
        restaurantNameComboBox.removeAllItems();
        
        for (CityRestaurant restaurant : area.getCityRestaurantList().getCityRestaurantList()){
            restaurantNameComboBox.addItem(restaurant);
        }
        
    }
    
    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) restaurantAdminTable.getModel();

        model.setRowCount(0);
        for (Area area : system.getAreaList()) {
            for (CityRestaurant restaurant : area.getCityRestaurantList().getCityRestaurantList()) {
                for (UserAccount userAccount : restaurant.getUserAccountDirectory().getUserAccountList()) {
                    Object[] row = new Object[6];
                    row[0] = area;
                    row[1] = restaurant.getCityName().getValue();
                    row[2] = restaurant;
                    row[3] = userAccount.getEmployee().getName();
                    row[4] = userAccount;
                    row[5] = userAccount.getPassword();

                    model.addRow(row);
                }
            }
        }
    }
    
    private boolean isValidAdminName(){
        String regex = "^[a-zA-Z]+$";
        Pattern p = Pattern.compile(regex);
        if (txtAdminName.getText() == null) {
            return false;
        }
        Matcher m = p.matcher(txtAdminName.getText());
        return m.matches();
    }
    
    private boolean isValidUserName() {
        String regex = "^[aA-zZ0-9]+$";
        Pattern p = Pattern.compile(regex);
        if (txtUsername.getText() == null) {
            return false;
        }
        Matcher m = p.matcher(txtUsername.getText());
        return m.matches();
    }
    
    private boolean isValidPassword() {
        String regex = "^(?=.*[0-9])" + "(?=.*[aA-zZ])" + ".{5,}$";
        Pattern p = Pattern.compile(regex);
        if (txtPassword.getText() == null) {
            return false;
        }
        Matcher m = p.matcher(txtPassword.getText());
        return m.matches();
    }
    
    private boolean isUniqueUsername() {
        boolean unique = true;
        CityRestaurant cityRestaurant = (CityRestaurant) restaurantNameComboBox.getSelectedItem();
        for (UserAccount ua : cityRestaurant.getUserAccountDirectory().getUserAccountList()) {
            if (txtUsername.getText().equals(ua.getUsername())) {
                unique = false;
                break;
            }
        }
        return unique;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        restaurantAdminTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        submitJButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        backJButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        areaComboBox = new javax.swing.JComboBox();
        cityNameComboBox = new javax.swing.JComboBox();
        restaurantNameComboBox = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        txtAdminName = new javax.swing.JTextField();
        txtPassword = new javax.swing.JTextField();
        btnDelete = new javax.swing.JButton();

        restaurantAdminTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Area", "City", "Restaurant", "Admin Name", "Username", "Password"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(restaurantAdminTable);
        if (restaurantAdminTable.getColumnModel().getColumnCount() > 0) {
            restaurantAdminTable.getColumnModel().getColumn(0).setResizable(false);
            restaurantAdminTable.getColumnModel().getColumn(0).setPreferredWidth(100);
            restaurantAdminTable.getColumnModel().getColumn(1).setResizable(false);
            restaurantAdminTable.getColumnModel().getColumn(1).setPreferredWidth(30);
            restaurantAdminTable.getColumnModel().getColumn(2).setResizable(false);
            restaurantAdminTable.getColumnModel().getColumn(2).setPreferredWidth(70);
            restaurantAdminTable.getColumnModel().getColumn(3).setResizable(false);
            restaurantAdminTable.getColumnModel().getColumn(3).setPreferredWidth(70);
            restaurantAdminTable.getColumnModel().getColumn(4).setResizable(false);
            restaurantAdminTable.getColumnModel().getColumn(5).setResizable(false);
        }

        jLabel2.setText("Username");

        submitJButton.setText("Submit");
        submitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitJButtonActionPerformed(evt);
            }
        });

        jLabel4.setText("Password");

        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Restaurant Name");

        jLabel3.setText("Area");

        jLabel5.setText("City");

        areaComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cityNameComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cityNameComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cityNameComboBoxActionPerformed(evt);
            }
        });

        restaurantNameComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel6.setText("Admin Name");

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(173, 173, 173)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtUsername, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                            .addComponent(txtAdminName)
                            .addComponent(txtPassword)
                            .addComponent(areaComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cityNameComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(restaurantNameComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(backJButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 602, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(259, 259, 259)
                        .addComponent(submitJButton)
                        .addGap(3, 3, 3)
                        .addComponent(btnDelete)
                        .addGap(14, 14, 14)))
                .addGap(18, 18, 18))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(backJButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(areaComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cityNameComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(restaurantNameComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtAdminName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(submitJButton)
                    .addComponent(btnDelete))
                .addGap(35, 35, 35))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void submitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitJButtonActionPerformed
        CityRestaurant cityRestaurant = (CityRestaurant) restaurantNameComboBox.getSelectedItem();
        
        String username = txtUsername.getText();
        String password = txtPassword.getText();
        String adminName = txtAdminName.getText();
        Employee employee = cityRestaurant.getEmployeeDirectory().createEmployee(adminName);
        if (!isValidAdminName()) {
            JOptionPane.showMessageDialog(null, "Invalid admin name!");
        }
        else if (!isValidUserName()) {
            JOptionPane.showMessageDialog(null, "Invalid username!");
        }
        else if (!isUniqueUsername()) {
            JOptionPane.showMessageDialog(null, "Username should be unique!");
        }
        else if (!isValidPassword()) {
            JOptionPane.showMessageDialog(null, "Password should be at least 5 digits, with at least one letter and one digit.");
        }
        else {
            UserAccount account = cityRestaurant.getUserAccountDirectory().createUserAccount(username, password, employee, new RestaurantAdminRole());
            populateTable();

            txtUsername.setText("");
            txtPassword.setText("");
            txtAdminName.setText("");
        }
    }//GEN-LAST:event_submitJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        SystemAdminWorkAreaJPanel sysAdminwjp = (SystemAdminWorkAreaJPanel) component;
        sysAdminwjp.populateTree();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void cityNameComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cityNameComboBoxActionPerformed
        Area area = (Area) areaComboBox.getSelectedItem();
        CityRestaurant.CityName cityname = (CityRestaurant.CityName)cityNameComboBox.getSelectedItem();
        if (area != null & cityname != null) {
            populateRestaurantComboBox(area);
        }
    }//GEN-LAST:event_cityNameComboBoxActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int row = restaurantAdminTable.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Please select an account!");
            return;
        }
        CityRestaurant r  = (CityRestaurant) restaurantAdminTable.getValueAt(row, 2);
        UserAccount ua = (UserAccount) restaurantAdminTable.getValueAt(row, 4);
        boolean remove = r.getUserAccountDirectory().getUserAccountList().remove(ua);
        if (remove) {
            populateTable();
            JOptionPane.showMessageDialog(null, "Successfully deleted!");
        }
    }//GEN-LAST:event_btnDeleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox areaComboBox;
    private javax.swing.JButton backJButton;
    private javax.swing.JButton btnDelete;
    private javax.swing.JComboBox cityNameComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable restaurantAdminTable;
    private javax.swing.JComboBox restaurantNameComboBox;
    private javax.swing.JButton submitJButton;
    private javax.swing.JTextField txtAdminName;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
